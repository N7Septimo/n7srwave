# rules.conf for Suricata to analyze network traffic
# Define variables for networks and ports
HOME_NET: "[192.168.0.0/16,10.0.0.0/8,172.16.0.0/12]" # Adjust to your internal network
EXTERNAL_NET: "!$HOME_NET"
HTTP_SERVERS: "$HOME_NET"
HTTP_PORTS: "80,8080"
DNS_SERVERS: "$HOME_NET"
DNS_PORTS: "53"

# Rule to log all HTTP GET requests for analysis
alert http $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"HTTP GET Request Detected"; flow:to_server,established; http.method; content:"GET"; classtype:web-activity; sid:1000001; rev:1;)

# Rule to detect and log suspicious User-Agent strings
alert http $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"Suspicious User-Agent Detected"; flow:to_server,established; http.user_agent; content:"|28|bad|20|bot|29|"; nocase; classtype:policy-violation; sid:1000002; rev:1;)

# Rule to log DNS queries for analysis
alert dns $EXTERNAL_NET any -> $DNS_SERVERS $DNS_PORTS (msg:"DNS Query Detected"; flow:to_server,established; dns.query; classtype:protocol-command-decode; sid:1000003; rev:1;)

# Rule to detect large TCP payloads (potential data exfiltration)
alert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:"Large TCP Payload Detected"; flow:to_server,established; dsize:>1000; classtype:unusual-activity; sid:1000004; rev:1;)

# Rule to log all TLS handshake traffic
alert tls $HOME_NET any -> $EXTERNAL_NET any (msg:"TLS Handshake Detected"; flow:to_server,established; tls; classtype:protocol-command-decode; sid:1000005; rev:1;)

# Enable logging for dropped packets
alert any any any -> any any (msg:"Dropped Packet Detected"; flow:to_server,established; classtype:network-scan; sid:1000006; rev:1;)

# Define output for logging
output:
  - fast:
      enabled: yes
      filename: fast.log
      append: yes
  - eve-log:
      enabled: yes
      filetype: regular
      filename: eve.json
      types:
        - alert
        - http
        - dns
        - tls